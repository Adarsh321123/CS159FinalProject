{
    "total_repositories": 6,
    "repositories": {
        "/raid/adarsh/repos/lecopivo/SciLean": {
            "number_of_sorries": 291,
            "number_of_proofs_found": 24,
            "proofs_details": [
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Prod.mk.arg_fstsnd.Bijective_rule_simple'",
                    "proof_text": "constructor <;> intro h\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Prod.mk.arg_fstsnd.Bijective_rule_simple",
                    "proof_text": "constructor <;> intro h\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Equiv.invFun.arg_a0.Bijective_rule",
                    "proof_text": "convert hf\nsimp [hf]\nexact f.symm.bijective.comp hf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FloatAsReal.lean",
                    "theorem_name": "SciLean.re_float",
                    "proof_text": "rw [RCLike.ext_iff]\nexact ⟨rfl, rfl⟩"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Equiv.toFun.arg_a0.Bijective_rule",
                    "proof_text": "convert hf\nconstructor\nexact fun _ => hf\nintro\nexact f.bijective.comp hf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.id_rule",
                    "proof_text": "rw [ContCDiffAt]\ntauto"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.comp_rule",
                    "proof_text": "rw [ContCDiffAt] at *\naesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IsAffineMap.IsAffineMap_apply",
                    "proof_text": "constructor\nconstructor\nsimp\nsimp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IsLinearMap.isLinearMap_const_zero",
                    "proof_text": "constructor\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IsLinearMap.isLinearMap_apply",
                    "proof_text": "constructor\nall_goals aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.zero_apply",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.id_rule",
                    "proof_text": "rw [CDifferentiableAt]\ntauto"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.id_rule",
                    "proof_text": "intro x\nrw [CDifferentiableAt]\ntauto"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.comp_rule",
                    "proof_text": "rw [CDifferentiableAt] at *\naesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.comp_rule",
                    "proof_text": "intro x\ndsimp [CDifferentiable] at *\nhave := hg x\nfun_prop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD.zero_apply",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap.zero_apply",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.Measure.prod_volume",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.ite_pull_measureOf",
                    "proof_text": "split_ifs <;> rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.ite_pull_ennreal_toReal",
                    "proof_text": "split_ifs <;> rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.norm₂_scalar",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.action_iteD",
                    "proof_text": "aesop"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_div_one",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_min_zero_one",
                    "proof_text": "symm\nrw [min_comm]\nsimp"
                }
            ],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Prod.mk.arg_fstsnd.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Neg.neg.arg_a0.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Approx/ApproxSolution.lean",
                    "theorem_name": "SciLean.approx_consistency"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Inv.inv.arg_a0.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.Inv.inv.arg_a0.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSub.hSub.arg_a1.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HAdd.hAdd.arg_a0.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HAdd.hAdd.arg_a1.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSub.hSub.arg_a0.Bijective_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a0.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a1.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a0.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HMul.hMul.arg_a1.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSMul.hSMul.arg_a1.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HSMul.hSMul.arg_a1.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Meta/GenerateLinearMapSimp.lean",
                    "theorem_name": "IsLinearMap.sum_push"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Meta/GenerateLinearMapSimp.lean",
                    "theorem_name": "IsLinearMap.sum_pull"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HVAdd.hVAdd.arg_a1.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HDiv.hDiv.arg_a0.Bijective_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Bijective.lean",
                    "theorem_name": "Function.Bijective.HDiv.hDiv.arg_a0.Bijective_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasAdjDiff.lean",
                    "theorem_name": "SciLean.SciLean.norm₂.arg_x.HasAdjDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasAdjDiff.lean",
                    "theorem_name": "SciLean.SciLean.semiAdjoint.arg_y.HasAdjDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Diffeomorphism.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Diffeomorphism.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Function.invFun.arg_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Function.invFun.arg_f_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/Diffeomorphism.lean",
                    "theorem_name": "SciLean.Function.invFun.arg_f.cderiv_rule'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.ContCDiffAt.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.mk.arg_fstsnd.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.fst.arg_self.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.snd.arg_self.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Prod.snd.arg_self.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0a1.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0a1.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0a1.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0a1.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.ContCDiffAt_rule_int"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.ContCDiffAt_rule_nat"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Inner.inner.arg_a0a1.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.norm₂.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.ContCDiffAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/ContCDiff.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.ContCDiff_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IsAffineMap.IsAffineMap_comp"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IsAffineMap.IsAffineMap_pi"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "IndexType.sum.arg_f.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsAffineMap.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.IsAffineMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IsLinearMap.isLinearMap_pi"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "IndexType.sum.arg_f.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.flip.pdf_wrt_flip"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsLinearMap.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.flip.pdf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.flip.integral"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.fintype_sum_apply"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/Flip.lean",
                    "theorem_name": "SciLean.Rand.add_as_flip_E"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.E_smul"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.apply_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/SmoothLinearMap.lean",
                    "theorem_name": "SciLean.SmoothLinearMap.indextype_sum_apply"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.swap_bind"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.bind_E"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.mean_add"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.mean_add'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Rand.lean",
                    "theorem_name": "SciLean.Rand.bind_pdf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Prod.mk.arg_fstsnd.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Prod.fst.arg_self.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Prod.snd.arg_self.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiableAt.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.CDifferentiable.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0a1.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0a1.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.CDifferentiable_rule_nat"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Basis.proj.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a1.CDifferentiable_rule_int"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.DualBasis.dualProj.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.BasisDuality.toDual.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.BasisDuality.fromDual.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.Inner.inner.arg_a0a1.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/CDifferentiable.lean",
                    "theorem_name": "SciLean.SciLean.norm₂.arg_x.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "GetElem.getElem.arg_cont.semiAdjoint_rule_simple"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "LeanColls.Indexed.set.arg_contelem.IsLinearMap_rule_simple"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "GetElem.getElem.arg_cont.revCDerivProj_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "LeanColls.Indexed.set.arg_contelem.revCDerivProj_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Properties.lean",
                    "theorem_name": "LeanColls.Indexed.ofFn.arg_cont.semiAdjoint_rule_simple"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/Distributions/UniformI.lean",
                    "theorem_name": "SciLean.Rand.uniformI.pdf"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Data/ArrayType/Basic.lean",
                    "theorem_name": "SciLean.ArrayType.ext"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_eta"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_eval_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_eval_CDifferentiable'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_apply_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMapFD.lean",
                    "theorem_name": "SciLean.ContCDiffMapFD_apply_CDifferentiableAt"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_eval_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_eval_CDifferentiable'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_apply_CDifferentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionSpaces/ContCDiffMap.lean",
                    "theorem_name": "SciLean.ContCDiffMap_apply_CDifferentiableAt"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_proj_dualProj"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_dualBasis_basis"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_dualBasis_proj"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.inner_basis_dualProj"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/FinVec.lean",
                    "theorem_name": "SciLean.proj_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.split_integral_over_set_of_ite"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.isContinuousLinearMap_differentiable"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.CDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.starRingEnd.arg_a.IsContinuousLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/CIntegral.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.IsLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.Inner.inner.arg_a0.IsContinuousLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/IsContinuousLinearMap.lean",
                    "theorem_name": "SciLean.IsContinuousLinearMap.Inner.inner.arg_a1.IsContinuousLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.DistribDiffrentiable.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.parDistribDeriv.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.Bind.bind.arg_fx.DistribDifferentiable_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.toDistribution.linear_parDistribDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribDeriv.lean",
                    "theorem_name": "SciLean.cintegral.arg_f.parDistribDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/ParametricInverse.lean",
                    "theorem_name": "SciLean.parametric_inverse_bijection"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/PlaneDecomposition.lean",
                    "theorem_name": "SciLean.parametric_inverse_affine'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Functions/Gaussian.lean",
                    "theorem_name": "SciLean.gaussian.arg_μx.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Functions/Gaussian.lean",
                    "theorem_name": "SciLean.gaussian.arg_μσx.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.Measure.restrict_restrict"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Common.lean",
                    "theorem_name": "SciLean.Measure.prod_restrict"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HAdd.hAdd.arg_a0.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HAdd.hAdd.arg_a1.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HSub.hSub.arg_a0.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.HSub.hSub.arg_a1.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/Preimage.lean",
                    "theorem_name": "Set.Neg.neg.arg_a1.preimage_rule_Ioo"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.let_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Prod.mk.arg_fstsnd.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Neg.neg.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Inv.inv.arg_a0.invFun_rule_group"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Inv.inv.arg_a0.invFun_rule_field"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HAdd.hAdd.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HAdd.hAdd.arg_a1.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HSub.hSub.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.HSub.hSub.arg_a1.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Equiv.toFun.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdFDeriv.lean",
                    "theorem_name": "SciLean.FwdFDeriv.FinType.sum.arg_f.fwdFDeriv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/InvFun.lean",
                    "theorem_name": "Function.invFun.Equiv.invFun.arg_a0.invFun_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Rand/PushPullExpectation.lean",
                    "theorem_name": "SciLean.Rand.pull_E_affine"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FDeriv.lean",
                    "theorem_name": "SciLean.fderiv.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.norm₂_prod"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdFDeriv.lean",
                    "theorem_name": "SciLean.FwdFDeriv.HDiv.hDiv.arg_a0a1.fwdFDeriv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/ParametricDistribFwdDeriv.lean",
                    "theorem_name": "SciLean.parDistribFwdDeriv.bind_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.norm₂_squared_nat"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.norm₂_squared"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.scalar_norm"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/SemiInnerProductSpace.lean",
                    "theorem_name": "SciLean.norm2_scalar"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.arg_f.IsSmoothLinearMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.comp_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.let_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.let_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.pi_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.cderiv.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.Prod.mk.arg_fstsnd.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a0.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HAdd.hAdd.arg_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a0.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HSub.hSub.arg_a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.Neg.neg.arg_a0.cderiv_rule'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HMul.hMul.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HSMul.hSMul.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HDiv.hDiv.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.HDiv.hDiv.arg_a0a1.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.IndexType.sum.arg_f.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.ite.arg_chte.cderiv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.Inner.inner.arg_a0a1.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.SciLean.norm₂.arg_x.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.SciLean.cderiv.arg_dx.CDifferentiableAt_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/CDeriv.lean",
                    "theorem_name": "SciLean.SciLean.cderiv.arg_dx.cderiv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "SciLean.revDerivUpdate.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "SciLean.revDerivProjUpdate.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "IndexType.sum.arg_f.revDerivProj_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/RevDeriv.lean",
                    "theorem_name": "IndexType.sum.arg_f.revDerivProjUpdate_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.id_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.let_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Prod.mk.arg_fstsnd.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Prod.fst.arg_self.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Prod.snd.arg_self.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HMul.hMul.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HMul.hMul.arg_a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HAdd.hAdd.arg_a0a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HSMul.hSMul.arg_a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HDiv.hDiv.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HSub.hSub.arg_a0a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Finset.sum.arg_f.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Inner.inner.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Neg.neg.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.starRingEnd.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.HSMul.hSMul.arg_a0.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.IndexType.sum.arg_f.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.Inner.inner.arg_a1.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/SemiAdjoint.lean",
                    "theorem_name": "SciLean.semiAdjoint.SciLean.semiAdjoint.arg_y.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolve.lean",
                    "theorem_name": "SciLean.odeSolve.arg_ft₀tx₀.fwdDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolve.lean",
                    "theorem_name": "SciLean.odeSolve.arg_x₀.semiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolve.lean",
                    "theorem_name": "SciLean.odeSolve.arg_x₀.revCDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Modules/DifferentialEquations/OdeSolvers/Solvers.lean",
                    "theorem_name": "SciLean.explicitSymplecticEuler_eq_implicitSymplecticEulerV1"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdDeriv.lean",
                    "theorem_name": "SciLean.fwdDeriv.IndexType.sum.arg_f.fwdDeriv_rule_at"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionTransformations/FwdDeriv.lean",
                    "theorem_name": "SciLean.fwdDeriv.IndexType.sum.arg_f.fwdDeriv_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.const_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.apply_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.pi_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Prod.fst.arg_self.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Prod.snd.arg_self.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Neg.neg.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HAdd.hAdd.arg_a0a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HSub.hSub.arg_a0a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HMul.hMul.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HMul.hMul.arg_a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.starRingEnd.arg_a.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HSMul.hSMul.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HSMul.hSMul.arg_a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.HDiv.hDiv.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.SciLean.IndexType.sum.arg_f.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Inner.inner.arg_a0.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.Inner.inner.arg_a1.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/FunctionPropositions/HasSemiAdjoint.lean",
                    "theorem_name": "SciLean.HasSemiAdjoint.SciLean.semiAdjoint.arg_y.HasSemiAdjoint_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Util/SolveFun.lean",
                    "theorem_name": "SciLean.decompose_has_unique_solution"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Util/SolveFun.lean",
                    "theorem_name": "SciLean.decomposeSolution"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.fintype_sum_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.add_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.sub_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.smul_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.neg_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.indextype_sum_extAction"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.iteD_same"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.extAction_iteD"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_abs_one"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.extAction_iteD'"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_abs_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Distribution.postComp.arg_T.IsSmoothLinarMap_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_abs_neg"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_sqrt_one"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_sqrt_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Distribution/Basic.lean",
                    "theorem_name": "SciLean.Function.toDistribution_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Integral/Jacobian.lean",
                    "theorem_name": "SciLean.jacobian.comp_rule"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_max_one_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_max_zero_one"
                },
                {
                    "file_path": "/raid/adarsh/repos/lecopivo/SciLean/SciLean/Core/Objects/Scalar.lean",
                    "theorem_name": "SciLean.scalar_min_one_zero"
                }
            ],
            "number_of_premises_theorems_retrieved": 0,
            "num_files_traced": 0,
            "PR": ""
        },
        "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd": {
            "number_of_sorries": 28,
            "number_of_proofs_found": 0,
            "proofs_details": [],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "chebyshev_asymptotic_finsum"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "chebyshev_asymptotic"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "pi_asymp"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "primorial_bounds_finprod"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "primorial_bounds"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "pi_alt"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "pn_asymptotic"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "pn_pn_plus_one"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "prime_between"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "mu_pnt"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "mu_pnt_alt"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Consequences.lean",
                    "theorem_name": "lambda_pnt"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MediumPNT.lean",
                    "theorem_name": "integrable_x_mul_Smooth1"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MediumPNT.lean",
                    "theorem_name": "continuousAt_Smooth1"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MediumPNT.lean",
                    "theorem_name": "vertical_integrable_Smooth1"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MediumPNT.lean",
                    "theorem_name": "SmoothedChebyshevDirichlet"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MediumPNT.lean",
                    "theorem_name": "SmoothedChebyshevClose"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MediumPNT.lean",
                    "theorem_name": "MediumPNT"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/PerronFormula.lean",
                    "theorem_name": "Complex.cpow_inv_ofReal_pos"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MellinCalculus.lean",
                    "theorem_name": "MellinInversion_aux1"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MellinCalculus.lean",
                    "theorem_name": "MellinInversion_aux2"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MellinCalculus.lean",
                    "theorem_name": "MellinInversion_aux3"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/MellinCalculus.lean",
                    "theorem_name": "MellinInversion_aux4"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/ZetaBounds.lean",
                    "theorem_name": "integrable_log_over_pow"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/ZetaBounds.lean",
                    "theorem_name": "NormDerivZeta0Le"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Wiener.lean",
                    "theorem_name": "auto_cheby"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Wiener.lean",
                    "theorem_name": "limiting_fourier_variant"
                },
                {
                    "file_path": "/raid/adarsh/repos/AlexKontorovich/PrimeNumberTheoremAnd/PrimeNumberTheoremAnd/Wiener.lean",
                    "theorem_name": "crude_upper_bound"
                }
            ],
            "number_of_premises_theorems_retrieved": 0,
            "num_files_traced": 0,
            "PR": ""
        },
        "/raid/adarsh/repos/digama0/lean4lean": {
            "number_of_sorries": 4,
            "number_of_proofs_found": 0,
            "proofs_details": [],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/digama0/lean4lean/Lean4Lean/Theory/Typing/UniqueTyping.lean",
                    "theorem_name": "Lean4Lean.VEnv.IsDefEqU.weakN_iff"
                },
                {
                    "file_path": "/raid/adarsh/repos/digama0/lean4lean/Lean4Lean/Theory/Typing/StratifiedUntyped.lean",
                    "theorem_name": "Lean4Lean.VEnv.IsDefEq.inductionU1"
                },
                {
                    "file_path": "/raid/adarsh/repos/digama0/lean4lean/Lean4Lean/Theory/Typing/ParallelReduction.lean",
                    "theorem_name": "Lean4Lean.NormalEq.trans"
                },
                {
                    "file_path": "/raid/adarsh/repos/digama0/lean4lean/Lean4Lean/Theory/Typing/Stratified.lean",
                    "theorem_name": "Lean4Lean.VEnv.IsDefEq.induction1"
                }
            ],
            "number_of_premises_theorems_retrieved": 0,
            "num_files_traced": 0,
            "PR": ""
        },
        "/raid/adarsh/repos/avigad/mathematics_in_lean_source": {
            "number_of_sorries": 28,
            "number_of_proofs_found": 15,
            "proofs_details": [
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.add_right_cancel",
                    "proof_text": "simpa using h"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.add_neg_cancel_right",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.zero_mul",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.add_left_cancel",
                    "proof_text": "simpa using h"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.eq_neg_of_add_eq_zero",
                    "proof_text": "rwa [eq_neg_iff_add_eq_zero]"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.neg_neg",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.self_sub",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.two_mul",
                    "proof_text": "abel\nsimp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyRing.neg_eq_of_add_eq_zero",
                    "proof_text": "rw [← sub_eq_zero]\nrw [← neg_zero, ← h]\nabel"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyGroup.mul_right_inv",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyGroup.mul_one",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S02_Proving_Identities_in_Algebraic_Structures.lean",
                    "theorem_name": "MyGroup.mul_inv_rev",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S01_Implication_and_the_Universal_Quantifier.lean",
                    "theorem_name": "C03S01.Subset.trans",
                    "proof_text": "apply Set.Subset.trans"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S05_Proving_Facts_about_Algebraic_Structures.lean",
                    "theorem_name": "absorb1",
                    "proof_text": "simp"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C02_Basics/S05_Proving_Facts_about_Algebraic_Structures.lean",
                    "theorem_name": "absorb2",
                    "proof_text": "simp"
                }
            ],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S06_Sequences_and_Convergence.lean",
                    "theorem_name": "C03S06.convergesTo_add"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S06_Sequences_and_Convergence.lean",
                    "theorem_name": "C03S06.convergesTo_mul_const"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S06_Sequences_and_Convergence.lean",
                    "theorem_name": "C03S06.exists_abs_le_of_convergesTo"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S06_Sequences_and_Convergence.lean",
                    "theorem_name": "C03S06.aux"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S06_Sequences_and_Convergence.lean",
                    "theorem_name": "C03S06.convergesTo_unique"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C04_Sets_and_Functions/S02_Functions.lean",
                    "theorem_name": "Cantor"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C09_Topology/S02_Metric_Spaces.lean",
                    "theorem_name": "cauchySeq_of_le_geometric_two'"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S01_Implication_and_the_Universal_Quantifier.lean",
                    "theorem_name": "C03S01.my_lemma3"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S05_Disjunction.lean",
                    "theorem_name": "C03S05.MyAbs.le_abs_self"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S05_Disjunction.lean",
                    "theorem_name": "C03S05.MyAbs.neg_le_abs_self"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S05_Disjunction.lean",
                    "theorem_name": "C03S05.MyAbs.abs_add"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S05_Disjunction.lean",
                    "theorem_name": "C03S05.MyAbs.lt_abs"
                },
                {
                    "file_path": "/raid/adarsh/repos/avigad/mathematics_in_lean_source/MIL/C03_Logic/S05_Disjunction.lean",
                    "theorem_name": "C03S05.MyAbs.abs_lt"
                }
            ],
            "number_of_premises_theorems_retrieved": 0,
            "num_files_traced": 0,
            "PR": ""
        },
        "/raid/adarsh/repos/teorth/pfr": {
            "number_of_sorries": 24,
            "number_of_proofs_found": 2,
            "proofs_details": [],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MultiTauFunctional.lean",
                    "theorem_name": "sub_condMultiDistance_le'"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MultiTauFunctional.lean",
                    "theorem_name": "multiTau_min_exists"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MultiTauFunctional.lean",
                    "theorem_name": "sub_multiDistance_le"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MultiTauFunctional.lean",
                    "theorem_name": "sub_condMultiDistance_le"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MultiTauFunctional.lean",
                    "theorem_name": "multiTau_min_sum_le"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "kvm_ineq_I"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "kvm_ineq_II"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "kvm_ineq_III"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "ent_of_sum_le_ent_of_sum"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multiDist_indep"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multiDist_nonneg"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multidist_ruzsa_I"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multidist_ruzsa_II"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multidist_ruzsa_III"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multidist_ruzsa_IV"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multidist_eq_zero"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "condMultiDist_eq"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multiDist_chainRule"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "cond_multiDist_chainRule"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "iter_multiDist_chainRule"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "iter_multiDist_chainRule'"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "cor_multiDist_chainRule"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multiDist_copy",
                    "proof_text": "rfl"
                },
                {
                    "file_path": "/raid/adarsh/repos/teorth/pfr/PFR/MoreRuzsaDist.lean",
                    "theorem_name": "multiDist_of_perm",
                    "proof_text": "rfl"
                }
            ],
            "number_of_premises_theorems_retrieved": 109776,
            "num_files_traced": 2885,
            "PR": ""
        },
        "/raid/adarsh/repos/dwrensha/compfiles": {
            "number_of_sorries": 5,
            "number_of_proofs_found": 0,
            "proofs_details": [],
            "unproved_sorries": [
                {
                    "file_path": "/raid/adarsh/repos/dwrensha/compfiles/Compfiles/Imo2009P6.lean",
                    "theorem_name": "Imo2009P6.imo2009_p6_aux1"
                },
                {
                    "file_path": "/raid/adarsh/repos/dwrensha/compfiles/Compfiles/Bulgaria1998P6.lean",
                    "theorem_name": "Bulgaria1998P6.lemma_1'"
                },
                {
                    "file_path": "/raid/adarsh/repos/dwrensha/compfiles/Compfiles/Imo2008P5.lean",
                    "theorem_name": "Imo2008P5.even_subsets_card"
                },
                {
                    "file_path": "/raid/adarsh/repos/dwrensha/compfiles/Compfiles/Imo2008P5.lean",
                    "theorem_name": "Imo2008P5.claim"
                },
                {
                    "file_path": "/raid/adarsh/repos/dwrensha/compfiles/Compfiles/Imo2001P1.lean",
                    "theorem_name": "Imo2001P1.lemma1"
                }
            ],
            "number_of_premises_theorems_retrieved": 177478,
            "num_files_traced": 5660,
            "PR": ""
        }
    }
}